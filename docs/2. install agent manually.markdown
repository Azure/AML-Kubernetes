By now, we only support install AML operator mannually, in the near future we will support automatically insall AML operator after attach compute target.
## prerequisite
to install AML operator, you need:
1. you need get the kubeconf from AKS CLI
2. you need use the AKS cluster as kubeclt current context

## one step installation（linux）
we provide a shell script to support one step installation. It is valiated in linux.
1. download [install script package](/files/install_script.tar).
2. extract install script
```
tar xvf install_script.tar
```
3. go to the install script document
```
cd install_script
```
4. install AML operator.
```
bash install.sh <installer image> <compute target resource id> <node pool> <appinsight InstrumentationKey>
```
installer image: the install image, the newest image is: cmaksacr.azurecr.io/cmk8s/private-build-pytorch-operator/mlc/agent-setup:06-03

compute target resource id: the resource id of this compute in Azure. It is structure is: <AML workspace resource id>/computes/<compute name>, due to in this time the compute target is not created yet, you need aliegn to use the same compute target name in [attch CMAKS compute step](https://github.com/Azure/CMK8s-private-review-doc/blob/master/docs/4.%20attach%20compute.markdown)

You can find the AML workspace resource id from AML workspace > settings > properties.

![workspace resoure id](/pics/2.1workspaceresourceid.png)

![workspace resoure id](/pics/2.2workspaceresourceid.png)

node pool: the AKS node pool in this AKS cluster used to attach the compute target.

appinsight InstrumentationKey: the Connection String of this appinsight, you can find this from AML work space application insights.

![application insights](/pics/2.3applicationinsights.png)

![connection string][/pics/2.4connectionstring.png]


## Step by step installation(TBD)

## useful commands

### Azure CLI

#### list subs
```
az account list --output table
```
#### change sub
```
az account set -s <sub>
```
### AKS CLI
#### get kubeconfig
```
az aks get-credentials --resource-group <resource-group> --name <cluster-name>
```
### kubeclt
#### list kube config context
```
kubectl config get-contexts
```
#### change kube config context
```
kubectl config use-context <context>
```